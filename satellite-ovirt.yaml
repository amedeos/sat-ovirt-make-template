- name: Template Provisioning
  hosts: localhost
  become: false
  gather_facts: false
  vars_files:
    - variables-vault.yaml
    - variables.yaml
  tasks:

  - name: Search hostgroup in Satellite - rhv
    local_action: uri
    args:
      url: "{{ sat_server_url }}/api/hostgroups?search={{ template.hostgroup_name|urlencode }}"
      user: "{{ sat_username }}"
      password: "{{ sat_password }}"
      force_basic_auth: true
      return_content: true
      validate_certs: false
      body_format: json
      method: GET
    register: json_response_rhv

  - name: Loop for hostgroup id
    set_fact:
      dyn_hostgroup_id: "{{ item.id }}"
    loop: "{{ json_response_rhv.json.results }}"
    loop_control:
      label: "{{ item.name }}"
    when: json_response_rhv.json['results'][0]['id'] is defined and item.name == template.hostgroup_name

  - name: Exit if hostgroup name is not found
    fail:
      msg: "Hostgroup name '{{ template.hostgroup_name }}' not found... Exit"
    when:
      - dyn_hostgroup_id is undefined

  - name: Satellite - Create New Host for rhv
    tags: newvm
    local_action: uri
    args:
      url: "{{ sat_url_newhost }}"
      user: "{{ sat_username }}"
      password: "{{ sat_password }}"
      force_basic_auth: true
      return_content: true
      validate_certs: false
      body_format: json
      method: POST
      body:
        host: "{{ template }}"
      status_code:
      - 201
      - 422
    changed_when: host_create_rhv.status == 201
    failed_when:
    - host_create_rhv.status == 422
    - host_create_rhv.json.error.full_messages[0] is defined and host_create_rhv.json.error.full_messages[0] != "Name has already been taken"
    register: host_create_rhv

  #- debug:
  #    var: host_create_rhv

  - name: Generate hosts-templaterhv file
    copy:
      dest: hosts-templaterhv
      content: |
        [templaterhv]
        {{ template.name }} ansible_ssh_host={{ template.ip }} ansible_ssh_user=root ansible_password={{ vm_password }}

